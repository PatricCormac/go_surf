/*! normalize.css v8.0.1 | MIT License | github.com/necolas/normalize.css */button,hr,input{overflow:visible}progress,sub,sup{vertical-align:baseline}.slick-loading .slick-slide,.slick-loading .slick-track{visibility:hidden}html{line-height:1.15;-webkit-text-size-adjust:100%}body{margin:0}details,main{display:block}h1{font-size:2em;margin:.67em 0}hr{-webkit-box-sizing:content-box;box-sizing:content-box;height:0}code,kbd,pre,samp{font-family:monospace,monospace;font-size:1em}a{background-color:transparent}abbr[title]{border-bottom:none;-webkit-text-decoration:underline dotted;text-decoration:underline dotted}b,strong{font-weight:bolder}small{font-size:80%}sub,sup{font-size:75%;line-height:0;position:relative}sub{bottom:-.25em}sup{top:-.5em}img{border-style:none}button,input,optgroup,select,textarea{font-family:inherit;font-size:100%;line-height:1.15;margin:0}button,select{text-transform:none}.slider-item__info,.suptitle-right{text-transform:uppercase;color:#fff}[type=button],[type=reset],[type=submit],button{-webkit-appearance:button}[type=button]::-moz-focus-inner,[type=reset]::-moz-focus-inner,[type=submit]::-moz-focus-inner,button::-moz-focus-inner{border-style:none;padding:0}[type=button]:-moz-focusring,[type=reset]:-moz-focusring,[type=submit]:-moz-focusring,button:-moz-focusring{outline:ButtonText dotted 1px}fieldset{padding:.35em .75em .625em}legend{-webkit-box-sizing:border-box;box-sizing:border-box;color:inherit;display:table;max-width:100%;padding:0;white-space:normal}textarea{overflow:auto}[type=checkbox],[type=radio]{-webkit-box-sizing:border-box;box-sizing:border-box;padding:0}[type=number]::-webkit-inner-spin-button,[type=number]::-webkit-outer-spin-button{height:auto}[type=search]{-webkit-appearance:textfield;outline-offset:-2px}[type=search]::-webkit-search-decoration{-webkit-appearance:none}::-webkit-file-upload-button{-webkit-appearance:button;font:inherit}summary{display:list-item}[hidden],template{display:none}.slick-list,.slick-slider,.slick-track{display:block;position:relative}.slick-slider{-webkit-box-sizing:border-box;box-sizing:border-box;-webkit-user-select:none;-moz-user-select:none;-ms-user-select:none;user-select:none;-webkit-touch-callout:none;-khtml-user-select:none;-ms-touch-action:pan-y;touch-action:pan-y;-webkit-tap-highlight-color:transparent}.slick-list{overflow:hidden;margin:0;padding:0}.slick-list:focus{outline:0}.slick-list.dragging{cursor:pointer;cursor:hand}.slick-slider .slick-list,.slick-slider .slick-track{-webkit-transform:translate3d(0,0,0);-ms-transform:translate3d(0,0,0);transform:translate3d(0,0,0)}.slick-track{top:0;left:0;margin-left:auto;margin-right:auto}.slick-track:after,.slick-track:before{display:table;content:''}.slick-track:after{clear:both}.slick-slide{display:none;float:left;height:100%;min-height:1px}[dir=rtl] .slick-slide{float:right}.slick-slide img{display:block}.slick-slide.slick-loading img{display:none}.slick-slide.dragging img{pointer-events:none}.slick-initialized .slick-slide{display:block}.slick-vertical .slick-slide{display:block;height:auto;border:1px solid transparent}.slick-arrow.slick-hidden{display:none}.suptitle-right{font-size:22px;line-height:32px;letter-spacing:7.33px;opacity:.5;padding-left:103px;position:relative;display:inline-block}.suptitle-right::before{content:"";position:absolute;width:80px;height:1px;background-color:#fff;left:0;top:50%}.header,.header__slider-item{height:100vh;position:relative}body{font-family:'Fira Sans',sans-serif;font-weight:400;font-size:16px}.header__slider-item{background-image:url(../images/header-bg.jpg);background-repeat:no-repeat;background-size:cover;background-position:center}.slider-item__info{position:absolute;right:80px;bottom:115px;text-align:right}.slider-item__info a img{position:absolute;right:0}.slider-item__info-suptitle{margin-bottom:5px}.slider-item__info-title{font-weight:800;font-size:80px;line-height:86px;margin-bottom:48px}.slider-item__info-suptext{margin-bottom:8px}.slider-item__info-text{font-weight:800;font-size:40px;line-height:46px;margin-bottom:20px}.slider-arrows{position:absolute;top:40px;right:80px;cursor:pointer;z-index:1}.slider-arrows__left{right:125px}.slider-dots{position:absolute;right:50px;bottom:36px;min-width:920px;color:#fff}.slider-dots .slick-current .dots-box{border-color:#4AF6CD}.dots-box{width:200px;height:28px;display:-webkit-box;display:-ms-flexbox;display:flex;-webkit-box-pack:justify;-ms-flex-pack:justify;justify-content:space-between;-webkit-box-align:center;-ms-flex-align:center;align-items:center;border-top:4px solid #fff;padding-top:6px}.dots-box__number{font-size:24px;font-weight:800;line-height:34px}.dots-box__name{font-weight:300;line-height:19px}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
